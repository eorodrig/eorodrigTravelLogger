/*
 *     <one line to give the program's name and a brief idea of what it does.>
    Copyright (C) <2015>  <Edwin Rodriguez eorodrig@ualberta.ca>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.eorodrig.TravelLogger;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.lang.reflect.Type;
import java.util.Date;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import android.content.Context;



public class ClaimController {

	//these are the attributes for the claim controller
	//these are all static as they need to remain in memory
	
	//claim list to hold claims
	private static ClaimList claimList = null;
	
	//the index of the current claim
	private static int claimListNumber = 0;
	
	//a temporary claim which is editable
	private static Claim claimToEdit = null;
	
	//the boolean status of the editability of the claim
	private static boolean editStatus = false;
	

	////////////////////////
	/*
	 * CLaim List operators
	 */
	///////////////////////////
	
	//return claim list, if null return new list
	static public ClaimList getClaimList(){
		
		if (claimList == null){
			claimList = new ClaimList();
		}	
		return claimList;
	}
	
	//add a claim, if claimList is empty, make a new one
	public void addClaim(Claim newClaim){
		if (claimList == null){
			claimList = new ClaimList();
		}
		claimList.addClaim(newClaim);
	}
	
	//remove a claim
	public void removeClaim(Claim newClaim){
		claimList.removeClaim(newClaim);
		
	}
	
	//return a claim at a selected index of the list
	public Claim getClaimAtIndex(int index){
		return claimList.getClaims().get(index);
	}
	
	public void updateClaims(Claim newClaim){
		
		claimList.updateClaim(claimListNumber, newClaim);
	}

	
	
	//////////////////////////
	/*
	 * Controller operators	
	 */
	/////////////////////////////////
	
	//getters/setters for editStatus
	public void setEditStatus(boolean status){
		this.editStatus = status;
	}
	public boolean getEditStatus(){
		return this.editStatus;
	}
	
	

	//Get/Set the current Claim index (List index)
	public void setIndexOfCurrentClaim(int index){
		claimListNumber = index;
	}
	public int getIndexOfCurrentClaim(){
		return claimListNumber;
	}
	
	
	
	public void setClaimToEdit(int index) {
		claimToEdit = getClaimAtIndex(index); 
	}

	public void resetClaimToEdit(){
		claimToEdit = null;
	}
	
	
	
	public Claim getClaimToEdit() {
		return claimToEdit;
		
	}



	public void save(Context context){
		String fileName = "TravelLoggerDate.sav";
		Gson gson = new Gson();

		try {

			FileOutputStream fos = context.openFileOutput(fileName, 0);
					
			OutputStreamWriter osw = new OutputStreamWriter(fos);
			
			//gson.toJson(claimList, osw);
			gson.toJson(claimList, osw);
			osw.flush();
			osw.close();
			fos.close();
			
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		 
	}

	

	
	
	public void load(Context context){
		String fileName = "TravelLoggerDate.sav";
		Gson gson = new Gson();
		
		try {
			FileInputStream fis = context.openFileInput(fileName);
			InputStreamReader isr = new InputStreamReader(fis);

			Type claimListType = new TypeToken<ClaimList>() {}.getType();
			
			
			//ArrayList<Claim>list = new ArrayList<Claim>();
			claimList = gson.fromJson(isr, claimListType);
			
			
			//list = gson.fromJson( );
			//claimList.addAll(list);
			
			//new TypeToken<ArrayList<String>>() {}.getType();
			isr.close();
			fis.close();
						
	
		} catch (FileNotFoundException e) {
			// TODO: handle exception
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
			
			

	
	}

	
	public void editClaim(Claim newClaim, ExpenseList expenseList) {
		claimList.updateClaim(claimListNumber, newClaim);
		
	}
	public void editClaim(String claim, String claimDescription, Date start,
			Date end) {
		
		this.claimList.getClaims().get(claimListNumber).editClaim(claim, claimDescription, start, end);
		this.claimList.notifyListeners();
		
	}
	
	
	public void submitClaim(int index){
		claimList.getClaims().get(index).submit();
		claimList.notifyListeners();
	}
	
	public void approveClaim(int index){
		claimList.getClaims().get(index).approve();
		claimList.notifyListeners();
	}
	
	public void returnClaim(int index){
		claimList.getClaims().get(index).returned();
		claimList.notifyListeners();
	}
}

